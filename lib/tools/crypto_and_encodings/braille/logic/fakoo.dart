import 'package:gc_wizard/tools/science_and_technology/segment_display/_common/logic/segment_display.dart';
import 'package:gc_wizard/utils/collection_utils.dart';
import 'package:gc_wizard/utils/constants.dart';

//reference: https://fakoo.de/fakoo/9-punkt-decoder.html
const Map<String, List<String>> _CODEBOOK_FAKOO = {
  ' ': [],
  'a': ['2','3','5','6','9'],
  'b': ['1','2','6','8'],
  'c': ['2','6','9'],
  'd': ['2','3','4','5','6'],
  'e': ['2','3','6'],
  'f': ['1','2','3','4'],
  'g': ['1','3','4','5'],
  'h': ['1','2','3','5','8','9'],
  'i': ['3','4'],
  'j': ['3','6','7'],
  'k': ['2','3','5','7','9'],
  'l': ['1','2','3','6'],
  'm': ['2','3','5','8','9'],
  'n': ['2','3','5','9'],
  'o': ['3','5','9'],
  'p': ['1','2','3','4','5'],
  'q': ['1','2','4','5','6'],
  'r': ['2','3','5'],
  's': ['3','5','6','8'],
  't': ['2','4','5','6','9'],
  'u': ['2','6','8','9'],
  'v': ['2','6','8'],
  'w': ['2','3','6','8','9'],
  'x': ['1','3','4','6'],
  'y': ['3','4','5','7'],
  'z': ['2','5','6','9'],
  'A': ['2','3','4','5','8','9'],
  'B': ['1','3','4','5','6','7','8','9'],
  'C': ['2','4','6','7','9'],
  'D': ['1','2','3','4','6','8'],
  'E': ['1','2','3','4','5','6','7','9'],
  'F': ['1','2','3','4','5','7'],
  'G': ['2','4','6','7','8','9'],
  'H': ['1','2','3','5','7','8','9'],
  'I': ['3','4','5','6','9'],
  'J': ['3','6','7','8'],
  'K': ['1','2','3','5','7','9'],
  'L': ['1','2','3','6','9'],
  'M': ['1','2','3','4','5','7','8','9'],
  'N': ['1','2','3','4','7','8','9'],
  'O': ['2','4','6','8'],
  'P': ['1','2','3','4','5','8'],
  'Q': ['2','4','6','8','9'],
  'R': ['1','2','3','4','5','7','9'],
  'S': ['3','4','5','6','7'],
  'T': ['1','4','5','6','7'],
  'U': ['1','2','3','6','7','8','9'],
  'V': ['1','2','6','7','8'],
  'W': ['1','2','3','5','6','7','8','9'],
  'X': ['1','3','5','7','9'],
  'Y': ['1','5','6','7'],
  'Z': ['1','3','4','5','6','7','9'],
  '√Ñ': ['2','3','4','5','7','8','9'],
  '√ñ': ['2','4','6','7','8'],
  '√ú': ['1','2','3','6','7','9'],
  '√§': ['2','3','5','6','7'],
  '√∂': ['3','5','7','9'],
  '√º': ['1','3','6','7'],
  '1': ['5','7','8','9'],
  '2': ['1','3','4','5','9'],
  '3': ['1','3','4','5','6','8'],
  '4': ['1','2','5','6','8'],
  '5': ['1','2','4','5','6','7'],
  '6': ['1','2','3','5','6','8','9'],
  '7': ['1','4','6','7','8'],
  '8': ['1','2','4','5','6','8','9'],
  '9': ['1','2','4','5','7','8','9'],
  '0': ['1','2','3','4','6','7','8','9'],
  //Punctuation
  '.': ['6'],
  ',': ['3','5'],
  ':': ['4','6'],
  ';': ['3','4','5'],
  '-': ['2','5','8'],
  '+': ['2','4','5','6','8'],
  '?': ['1','4','5','6','7','8'],
  '!': ['1','4','6','7'],
  '*': ['3','4','5','9'],
  '#': ['1','3','7','9'],
  '&': ['2','3','4','5','6','7','9'],
  '@': ['1','3','4','8','9'],
  '/': ['3','5','7'],
  '|': ['4','5','6'],
  '\\': ['1','5','9'],
  '_': ['3','6','9'],
  '<': ['5','7','9'],
  '=': ['1','3','4','6','7','9'],
  '>': ['1','3','5'],
  '(': ['5','6','7'],
  ')': ['1','5','6'],
  '[': ['1','2','3','4','6'],
  ']': ['4','6','7','8','9'],
  '{': ['2','3','4','5','7'],
  '}': ['1','4','5','8','9'],
  '‚Äö': ['5','6'],
  '\'': ['4','5'],
  '‚Äû': ['5','6','8','9'],
  '"': ['1','2','4','5'],
  '‚Äù': ['4','5','7','8'],
  '%': ['4','9'],
  '‚Ä∞': ['1','6','9'],
  '‚Äó': ['2','3','5','6','8','9'],
  '¬ß': ['2','3','4','5','6','7'],
  '~': ['2','3','5','7','8'],
  '¬∞': ['4','7','8'],
  '¬ø': ['2','3','4','5','6','9'],
  '¬°': ['3','4','6','9'],
  //Accents
  '¬¥': ['2','4'],
  '`': ['1','5'],
  '^': ['2','4','8'],
  '¬®': ['1','4'],
  '¬Ø': ['1','4','7'],
  'Àú': ['2','4','7'],
  'Àá': ['1','5','7'],
  '¬∏': ['3','5','6'],
  // '[ku]': ['1','2','5'],
  'Àõ': ['3','6'],
  // '[po]': ['1'],
  // Mathematics
  '¬∑': ['5'],
  '¬±': ['2','3','4','5','6','8','9'],
  '‚â†': ['1','2','4','5','6','7','8'],
  '¬≤': ['1','4','5','8'],
  '¬≥': ['2','4','5','7'],
  '‚àö': ['2','4','5','6','7'],
  //'[we]': ['1','4','7','8'],
  '‚à´': ['1','2','3','4','8'],
  //'[ie]': ['2','6','7','8','9'],
  '‚à•': ['1','2','3','7','8','9'],
  '‚à¶': ['1','2','3','4','5','6','8'],
  '‚à†': ['1','2','3','5','6','9'],
  '‚¶ü': ['3','5','6','7','9'],
  '‚ñ≥': ['3','7','9'],
  '‚ñ°': ['1','2','3','4','5','6','7','8','9'],
  '‚åí': ['2','3','4','7'],
  '‚Éù''': ['2','3','4','6','7','8'],
  '√∏': ['2','3','4','5','6','7','8'],
  'Œ£': ['1','2','3','4','6','7','9'],
  //'[me]': ['2','3','4','8','9'],
  '‚á¢': ['1','3','4','6','8'],
  // Shift sign
  // '[ho]': ['2','5','7'],
  // '[nh]': ['1','5','8'],
  // '[ti]': ['2','5','9'],
  // '[nt]': ['3','5','8'],
  // '[ha]': ['2','5','7','9'],
  // '[he]': ['1','3','5','8'],
  // '¬¨': ['5','8','9'],
  // '[mk]': ['2','5','8','9'],
  // '[ke]': ['3','6','8','9'],
  // Symbols
  '‚ôÇ': ['1','3','4','5','7','8','9'],
  '‚ôÄ': ['1','3','5','6','7','9'],
  '‚ôø': ['3','4','5','8','9'],
  'üòÄ': ['1','3','5','7','8','9'],
  '‚òè': ['1','3','4','5','7','9'],
  'üñÇ': ['1','3','4','6','7','8','9'],
  'üÜó': ['1','2','3','5','7'],
  '¬©': ['2','4','5','6','7','8','9'],
  // Arrows
  '‚Üë': ['2','4','5','8'],
  '‚Üí': ['4','5','6','8'],
  '‚Üì': ['2','5','6','8'],
  '‚Üó': ['3','4','7','8'],
  '‚Üò': ['1','6','8','9'],
  '‚Üñ': ['1','2','4','9'],
  '‚Üô': ['2','3','6','7'],
  // Greek
  'Œ±': ['2','3','5','6','7','9'],
  'Œ≤': ['3','4','5','6','7','8'],
  'Œ≥': ['1','5','6','7','8','9'],
  'Œ¥': ['3','4','5','7','9'],
  'Œº': ['3','4','5','7','8'],
  'œÄ': ['1','4','5','6','7','8','9'],
  'œâ': ['2','3','4','6','8','9'],
  // Currency
  '‚Ç¨': ['2','4','5','6','7','9'],
  '¬¢': ['2','4','6','9'],
  '\$': ['3','4','5','6','7','8','9'],
  '¬£': ['2','3','4','6','7','9'],
  '¬•': ['1','5','6','7','9'],
  // Times of day
  'üïë': ['3','4','5','8'],
  // '[u1]': ['2','5','6','7'],
  // '[u2]': ['2','4','5','9'],
  // '[uh]': ['3','4','5','8'],
  // '[u4]': ['1','5','6','8'],
  // Map symbols
  '‚ô•': ['1','2','4','6','7','8'],
  // '#': ['1','3','7','9'],
  // '+': ['2','4','5','6','8'],
  // '¬±': ['2','3','4','5','6','8','9'],
  // Reading direction
  '\u200e': ['1','3','8'],
  // '[ac]': ['3','4','9'],
  // '[vo]': ['1','6','7'],
  '\u200f': ['2','7','9'],
};


Segments encodeFakoo(String input) {
  List<String> inputs = input.split('');
  List<List<String>> result = [];
  for (int i = 0; i < inputs.length; i++) {
    if (_CODEBOOK_FAKOO[inputs[i]] != null) result.add(_CODEBOOK_FAKOO[inputs[i]]!);
  }
  return Segments(displays: result);
}

SegmentsChars decodeFakoo(List<String>? inputs) {
  if (inputs == null || inputs.isEmpty) return SegmentsChars(displays: [], chars: []);

  var displays = <List<String>>[];
  var segment = <String>[];

  Map<List<String>, String> CODEBOOK = switchMapKeyValue(_CODEBOOK_FAKOO);

  for (var element in inputs) {
    segment = _stringToSegment(element);
    displays.add(segment);
  }

  List<String> text = inputs.map((input) {
    var char = '';

    if (CODEBOOK.map((key, value) => MapEntry(key.join(), value.toString()))[input.split('').join()] == null) {
      char += UNKNOWN_ELEMENT;
    } else {
    var charH = CODEBOOK.map((key, value) => MapEntry(key.join(), value.toString()))[input.split('').join()];
      char += (charH ?? '');
    }

    return char;
  }).toList();

  return SegmentsChars(displays: displays, chars: text);
}

List<String> _stringToSegment(String input) {
  List<String> result = [];
  for (int i = 0; i < input.length; i++) {
    result.add(input[i]);
  }
  return result;
}