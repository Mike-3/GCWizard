// https://de.wikipedia.org/wiki/Upside_Down_Text
// https://en.wikipedia.org/wiki/Transformation_of_text#Upside-down_text

import 'package:gc_wizard/utils/collection_utils.dart';

const Map<String, String> ENCODE_FLIP_ROTATE = {
  '0': '0',
  '1': '‚áÇ',
  '2': '‚Üä',
  //'3': '‚Üã',
  '3': '∆ê',
  '4': 'ﬂà',
  '5': '·Äå',
  '6': '9',
  //'7': 'ùòì',
  '7': 'L',
  '8': '8',
  '9': '6',
  'a': '…ê',
  'b': 'q',
  'c': '…î',
  'd': 'p',
  'e': '«ù',
  'f': '…ü',
  'g': '·µ∑',
  'h': '…•',
  'i': '!',
  'j': '≈øÃ£',
  'k': ' û',
  'l': 'l',
  'm': '…Ø',
  'n': 'u',
  'o': 'o',
  'p': 'd',
  'q': 'b',
  'r': '…π',
  's': 's',
  't': ' á',
  'u': 'n',
  'v': ' å',
  'w': ' ç',
  'x': 'x',
  'y': ' é',
  'z': 'z',
  'A': '‚±Ø',
  'B': 'Íì≠',
  'C': '∆Ü',
  'D': 'Íì∑',
  'E': 'E',
  'F': '‚Ñ≤',
  'G': '‚ÖÅ',
  'H': 'H',
  'I': 'I',
  'J': 'Íì©',
  'K': 'Íìò',
  'L': '‚ÖÇ',
  'M': 'ÍüΩ',
  'N': 'N',
  'O': 'O',
  'P': '‘Ä',
  'Q': 'Íùπ',
  'R': 'Íì§',
  'S': 'S',
  'T': 'Íû±',
  'U': '’à',
  'V': '…Ö',
  'W': 'M',
  'X': 'X',
  'Y': '‚ÖÑ',
  'Z': 'Z',
  ' ': ' ',
  '.': 'Àô',
  ':': ':',
  ',': "'",
  '-': '-',
  '_': '‚Äæ',
  '+': '+',
  '*': '*',
  '#': '#',
  '~': '~',
  '?': '¬ø',
  '!': 'i',
  '/': '\\',
  '\\': '/',
  '[': ']',
  ']': '[',
  '(': ')',
  ')': '(',
  '=': '=',
  '"': '‚Äû',
  '&': '‚Öã',
};
Map<String, String> DECODE_FLIP_ROTATE = switchMapKeyValue(ENCODE_FLIP_ROTATE);

String decodeUpsideDownText(String input) {
  String result = '';
  input = input.replaceAll('≈øÃ£', 'j').split('').reversed.join('');

  for (int i = 0; i < input.length; i++) {
    if (DECODE_FLIP_ROTATE[input[i]].toString() != 'null') {
      result = result + DECODE_FLIP_ROTATE[input[i]].toString();
    } else {
      result = result + input[i];
    }
  }

  return result;
}

String encodeUpsideDownText(String input) {
  String result = '';
  input = input.split('').reversed.join('');

  for (int i = 0; i < input.length; i++) {
    if (ENCODE_FLIP_ROTATE[input[i]] != null) {
      result = result + ENCODE_FLIP_ROTATE[input[i]]!;
    } else {
      result = result + input[i];
    }
  }

  return result;
}
